package view;

import controller.ControllerMusica;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

public class BuscarMusicasFrame extends javax.swing.JFrame {

    private ControllerMusica controllerMusica;
    private DefaultListModel<String> listModelMusicasString; 

    public BuscarMusicasFrame(ControllerMusica controller) {
        this.controllerMusica = controller; 
        this.listModelMusicasString = new DefaultListModel<>(); 
        
        initComponents(); 
        
        jList1.setModel(listModelMusicasString); 

        this.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        this.setLocationRelativeTo(null);
        this.setTitle("Buscar Músicas");
    }
    
    public void setControllerMusica(ControllerMusica controllerMusica) {
        this.controllerMusica = controllerMusica;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        lbl_buscar_musicas = new javax.swing.JLabel();
        txt_buscar_musicas = new javax.swing.JTextField();
        bt_buscar_musica = new javax.swing.JButton();
        list_resultado = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        bt_curtir = new javax.swing.JButton();
        bt_descurtir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbl_buscar_musicas.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        lbl_buscar_musicas.setText(" Buscar músicas por nome, artista ou gênero");

        txt_buscar_musicas.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        txt_buscar_musicas.setText("Escreva aqui");
        txt_buscar_musicas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_buscar_musicasActionPerformed(evt);
            }
        });

        bt_buscar_musica.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bt_buscar_musica.setText("Buscar");
        bt_buscar_musica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_buscar_musicaActionPerformed(evt);
            }
        });

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        list_resultado.setViewportView(jList1);

        bt_curtir.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bt_curtir.setText("Curtir");
        bt_curtir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_curtirActionPerformed(evt);
            }
        });

        bt_descurtir.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bt_descurtir.setText("Descurtir");
        bt_descurtir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_descurtirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(txt_buscar_musicas, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(23, Short.MAX_VALUE)
                        .addComponent(lbl_buscar_musicas))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(list_resultado, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bt_buscar_musica, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(bt_curtir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bt_descurtir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lbl_buscar_musicas, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_buscar_musicas, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bt_buscar_musica, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bt_curtir, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bt_descurtir, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(list_resultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void txt_buscar_musicasActionPerformed(java.awt.event.ActionEvent evt) {                                                   
            if (this.controllerMusica != null) { 
            bt_buscar_musicaActionPerformed(evt);
        }
    }                                                  

    private void bt_buscar_musicaActionPerformed(java.awt.event.ActionEvent evt) {                                                 
                  if (controllerMusica == null) {
            JOptionPane.showMessageDialog(this, "Controller não configurado.", "Erro Interno", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            controllerMusica.buscarMusicas();
        } catch (SQLException ex) {
            Logger.getLogger(BuscarMusicasFrame.class.getName()).log(Level.SEVERE, "Erro SQL ao buscar músicas", ex);
            JOptionPane.showMessageDialog(this, "Erro ao buscar músicas: " + ex.getMessage(), "Erro de Banco de Dados", JOptionPane.ERROR_MESSAGE);
        }

    }                                                

    private void bt_curtirActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        if (controllerMusica == null) {
            JOptionPane.showMessageDialog(this, "Controller não configurado.", "Erro Interno", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        int selectedIndex = jList1.getSelectedIndex(); 
        
        if (selectedIndex != -1) { 
            String selectedValue = jList1.getSelectedValue();
            if (selectedValue != null && !selectedValue.equals("Nenhuma música encontrada.") && !selectedValue.equals("Digite algo para buscar.")) {
                try {
                    controllerMusica.curtirMusica(selectedIndex);
                } catch (SQLException ex) {
                    Logger.getLogger(BuscarMusicasFrame.class.getName()).log(Level.SEVERE, "Erro SQL ao curtir música", ex);
                    JOptionPane.showMessageDialog(this, "Erro ao curtir música: " + ex.getMessage(), "Erro de Banco de Dados", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma música para curtir.", "Nenhuma Música Selecionada", JOptionPane.WARNING_MESSAGE);
        }
    }                                         

    private void bt_descurtirActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
          if (controllerMusica == null) {
            JOptionPane.showMessageDialog(this, "Controller não configurado.", "Erro Interno", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int selectedIndex = jList1.getSelectedIndex(); 

        if (selectedIndex != -1) {
            String selectedValue = jList1.getSelectedValue();
             if (selectedValue != null && !selectedValue.equals("Nenhuma música encontrada.") && !selectedValue.equals("Digite algo para buscar.")) {
                try {
                    controllerMusica.descurtirMusica(selectedIndex);
                } catch (SQLException ex) {
                    Logger.getLogger(BuscarMusicasFrame.class.getName()).log(Level.SEVERE, "Erro SQL ao descurtir música", ex);
                    JOptionPane.showMessageDialog(this, "Erro ao descurtir música: " + ex.getMessage(), "Erro de Banco de Dados", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma música para descurtir.", "Nenhuma Música Selecionada", JOptionPane.WARNING_MESSAGE);
        }
    }                                            

        public DefaultListModel<String> getListModelMusicasString() {
        return listModelMusicasString;
    }
                                                   
    
                                                   
    public JTextField getTxtBuscarMusicas() {
        return txt_buscar_musicas;
    }

    // Getter para a JList (de Strings)
    public JList<String> getListaResultadosString() {
        return jList1;
    }

    public JButton getBt_buscar_musica() {
        return bt_buscar_musica;
    
    }

    /**
     * @param args the command line arguments
     */
 //   public static void main(String args[]) {
   //     /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
 //       try {
   //         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
     //           if ("Nimbus".equals(info.getName())) {
       //             javax.swing.UIManager.setLookAndFeel(info.getClassName());
         //           break;
 //               }
   //         }
     //   } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(BuscarMusicasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
  //      } catch (InstantiationException ex) {
    //        java.util.logging.Logger.getLogger(BuscarMusicasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      //  } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(BuscarMusicasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
  //      } catch (javax.swing.UnsupportedLookAndFeelException ex) {
    //        java.util.logging.Logger.getLogger(BuscarMusicasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      //  }
        //</editor-fold>

        /* Create and display the form */
     //   java.awt.EventQueue.invokeLater(new Runnable() {
   //        // public void run() {
         //       new BuscarMusicasFrame().setVisible(true);
       //     }
     //   });
   // }

    
    // Variables declaration - do not modify                     
    private javax.swing.JButton bt_buscar_musica;
    private javax.swing.JButton bt_curtir;
    private javax.swing.JButton bt_descurtir;
    private javax.swing.JList<String> jList1;
    private javax.swing.JLabel lbl_buscar_musicas;
    private javax.swing.JScrollPane list_resultado;
    private javax.swing.JTextField txt_buscar_musicas;
    // End of variables declaration                   
}
